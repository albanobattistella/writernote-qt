name: Windows

on:
  push:
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '.github/**'
      - '!.github/workflows/windows.yml'
      - 'macos-build/**'
  pull_request:
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '.github/**'
      - '!.github/workflows/windows.yml'
      - 'macos-build/**'

  release:
    types:
      - published

  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Clone.
        uses: actions/checkout@v2
        with:
          submodules: recursive
          path: ${{ env.REPO_NAME }}
                  
      - name: Install msys2
        uses: msys2/setup-msys2@v2

      - name: install innosetup
        run: choco install innosetup

      - name: install windows sdk
        run: choco install windows-sdk-10.0

      - uses: actions/setup-python@v2
        with:
          python-version: '3.9' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified

      - name: Download dependency
        shell: msys2 {0}
        run: |
          sh windows/dipendenze.sh
          cd windows
          sh build_libzip.sh
          sh build_poppler.sh
      
      - name: Writernote Build
        shell: msys2 {0}
        continue-on-error: true
        run: |          
          sh windows/compile.sh
          cd build

          rm -r CMakeCache.txt CMakeFiles build.ninja cmake_install.cmake writernote_autogen
      
      - name: Search libssl
        if: false
        run: |
          Get-ChildItem -Path D:\ -Filter windeployqt.exe -Recurse -ErrorAction SilentlyContinue -Force
          # Get-ChildItem -Path C:\ -Filter libssl.dll.a -Recurse -ErrorAction SilentlyContinue -Force
          # Get-ChildItem -Path D:\ -Filter libssl.dll.a -Recurse -ErrorAction SilentlyContinue -Force

      - name: Add manifest
        run: |
          #set PATH=%PATH%;C:\msys64\usr\bin;C:\msys64\mingw64\bin
          &'C:\Program Files (x86)\Windows Kits\10\bin\10.0.19041.0\x64\mt.exe' -manifest D:\a\writernote-qt\writernote-qt\updater\updater.exe.manifest -outputresource:D:\a\writernote-qt\writernote-qt\updater\build\updater.exe;1
        shell: powershell

      - name: Compile package for windows
        shell: powershell
        run: |
          cd windows
          iscc "package.iss"

        env:
          curr_dir: D:\a\writernote-qt\writernote-qt

      - name: Set macros
        if: github.event_name == 'release'
        shell: bash
        run: |
          $pos = "D:\a\writernote-qt\writernote-qt\windows"
          echo "ARTIFACT_NAME=$($env:GITHUB_REF -replace "refs/tags/")" >> $GITHUB_ENV
          echo "WRITERNOTE_ZIP="writernote_win_setup_$($env:GITHUB_REF -replace "refs/tags/").zip" >> $GITHUB_ENV"
          echo "WRITERNOTE_EXE="$pos\Output\writernote_win_setup_$($env:GITHUB_REF -replace "refs/tags/").exe" >> $GITHUB_ENV"

      - name: Update package to release
        if: github.event_name == 'release'
        shell: powershell
        run: |
          $pos = "D:\a\writernote-qt\writernote-qt\windows"
          $build = "D:\a\writernote-qt\writernote-qt\build"
          
          # make zip to upload
          Compress-Archive -Path $build\* -DestinationPath "writernote_win_setup_$($env:GITHUB_REF -replace "refs/tags/").zip"

          Rename-Item $pos\Output\writernote_setup.exe "writernote_win_setup_$($env:GITHUB_REF -replace "refs/tags/").exe"
          
          mkdir artifact
          move ${{ env.WRITERNOTE_ZIP }} artifact\
          move ${{ env.WRITERNOTE_EXE }} artifact\

      - uses: actions/upload-artifact@master
        name: Upload artifact.
        if: github.event_name == 'release'
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: artifact\