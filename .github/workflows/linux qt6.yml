name: Linux build qt6

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '.github/**'
      - 'updater/**'
      - 'windows/**'
      - 'macos-build/**'
      - '!.github/workflows/linux qt6.yml'

  pull_request:
    branches: [ master ]

    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '.github/**'
      - 'macos-build/**'
      - '!.github/workflows/linux qt6.yml'

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Clone
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Run a one-line script
        run: |
          sudo apt update
          sudo apt -y install libzip-dev
          sudo apt -y install libfreetype-dev libfontconfig1-dev 
          sudo apt -y install libtiff-dev libnss3-dev libcairo2-dev
          sudo apt -y install libboost-all-dev libopenjp2-7-dev
          sudo snap install cmake --classic
          sudo apt -y install ninja-build

      - name: Qt 6 cache.
        if: false
        id: cache-qt
        uses: actions/cache@v2
        with:
          path: ${{ env.PREFIX_LIB }}/qt-cache
          key: ${{ runner.OS }}-qt-${{ env.CACHE_KEY }}-qtmulmedia-1

      - name: Use cached Qt 5.15.2.
        if: steps.cache-qt.outputs.cache-hit == 'true'
        run: |
          cd $PREFIX_LIB
          mv qt-cache Qt-5.15.2
          sudo mkdir -p $QT_PREFIX
          sudo mv -f Qt-5.15.2 "$(dirname "$QT_PREFIX")"/

      - name: Build Qt 6.3.0
        if: steps.cache-qt.outputs.cache-hit != 'true'
        run: |
          git clone -b v6.3.0 https://code.qt.io/qt/qt5.git qt_6_3_0
          cd qt_6_3_0
          perl init-repository --module-subset=qtbase,qtimageformats,qtsvg,qt5compat,qtmultimedia,qtshadertools
          
          mkdir $(pwd)/../qt_install

          ./configure \
            -prefix $(pwd)/../qt_install \
            -libdir $(pwd)/../qt_install \
            -release \
            -opensource \
            -confirm-license \
            -no-feature-getentropy \
            -no-feature-renameat2 \
            -no-feature-statx \
            -no-feature-highdpiscaling \
            -nomake tools \
            -nomake examples \
            -nomake tests \
            -skip qtwebengine
          
          ninja
          ninja install

      - name: Build poppler
        run: |
          #wget https://github.com/freedesktop/poppler/archive/refs/tags/poppler-21.10.0.zip
          #unzip poppler-21.10.0.zip
          #rm poppler-21.10.0.zip
          #cd poppler-poppler-21.10.0

          echo $(pwd)
          cd 3rdparty/poppler

          mkdir install
          
          cmake . \
            -DCMAKE_INSTALL_LIBDIR=$(pwd)/install/ \
            -DCMAKE_INSTALL_INCLUDEDIR=$(pwd)/install/
          make -j$(nproc)
          sudo make install

      - name: CMake compile
        run: |
          sudo find / -name "Qt6MultimediaConfig.cmake"
          cmake .
          make -j$(nproc)
