name: Android

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '.github/**'
      - 'updater/**'
      - 'windows/**'
      - 'macos-build/**'
      - '!.github/workflows/android.yml'

  pull_request:
    branches: [ master ]

    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '.github/**'
      - 'macos-build/**'
      - '!.github/workflows/android.yml'

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      QT: "5_15_2"
      PREFIX_LIB: "/home/runner/work/writernote-qt/writernote-qt/3rdparty"
      PROJECT_PATH: "/home/runner/work/writernote-qt/writernote-qt/"
      CACHE_KEY: cache-key-ci
      ZLIB_VER: "v1.2.11"
      RESET_CACHE: 'false'
      SDK_PATH: "/home/runner/work/writernote-qt/writernote-qt/3rdparty/sdk"
      NDK_PATH: "/home/runner/work/writernote-qt/writernote-qt/3rdparty/ndk"
      JDK_PATH: "/home/runner/work/writernote-qt/writernote-qt/3rdparty/jdk"
      LIB_JPEG_TURBO: "/home/runner/work/writernote-qt/writernote-qt/3rdparty/libjpeg-turbo"
      QT_PREFIX: "/home/runner/work/writernote-qt/writernote-qt/3rdparty/qt_build"
      POPPLER_PATH: "/home/runner/work/writernote-qt/writernote-qt/3rdparty/poppler"
      ANDROID_VERSION: 21
      TOOLCHAIN: "clang"
    steps:
      - name: "Clone"
        uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Set up dep
        run: |
          sudo apt install snapd ninja-build
          sudo snap install cmake --classic
      
      - name: Download openJDK
        run: |
          curl -L https://download.java.net/openjdk/jdk8u41/ri/openjdk-8u41-b04-linux-x64-14_jan_2020.tar.gz -o openjdk-linux.tar.gz
          tar -xf openjdk-linux.tar.gz
          mv java* $JDK_PATH

      - name: Download and set SDK 
        run: |
          curl -L https://dl.google.com/android/repository/platform-tools_r31.0.3-linux.zip -o sdk.zip
          unzip sdk.zip
          mv platform-tools $SDK_PATH

      - name: Download and set NDK
        run: |
          curl -L https://dl.google.com/android/repository/android-ndk-r22b-linux-x86_64.zip -o ndk.zip
          unzip ndk.zip
          mv android-ndk-r22b $NDK_PATH

      - name: Download qt
        uses: jurplel/install-qt-action@v2
        with:
          host: 'linux'
          version: 5.15.2
          target: 'android'
          modules: 'multimedia'

      - name: Build libzip
        run: |
          cd 3rdparty
          #ANDROID_NDK=/home/$USER/Android/Sdk/ndk/22.0.7026061/
          #export PATH=${ANDROID_NDK}:$PATH
          #export NDK_PROJECT_PATH=./
          
          chmod +x libzip.sh
          ./libzip.sh OFF $NDK_PATH
      
      - name: Build libjpeg-turbo
        run: |
          cd $PREFIX_LIB
          git clone https://github.com/libjpeg-turbo/libjpeg-turbo

          cd  libjpeg-turbo
          mkdir install
          mkdir build

          echo $(pwd)

          echo $(pwd)
          echo $(ls)

          cmake -G"Unix Makefiles" \
            -DANDROID_ABI=arm64-v8a \
            -DANDROID_ARM_MODE=arm \
            -DANDROID_PLATFORM=android-$ANDROID_VERSION \
            -DANDROID_TOOLCHAIN=$TOOLCHAIN \
            -DCMAKE_ASM_FLAGS="--target=aarch64-linux-android$ANDROID_VERSION" \
            -DCMAKE_TOOLCHAIN_FILE=$NDK_PATH/build/cmake/android.toolchain.cmake \
            -DCMAKE_INSTALL_PREFIX=$LIB_JPEG_TURBO/install \
            -B$LIB_JPEG_TURBO/build
          
          cd build
          sudo make install -j$(nproc --all)


      - name: install lib for build poppler
        run: |
          sudo apt-get install -y libfreetype-dev libfreetype6-dev liblcms2-dev libtiff5-dev

      - name: Build poppler
        run: |
          cd 3rdparty

          git clone https://github.com/freedesktop/poppler.git
          cd poppler
          mkdir build
          mkdir install

          cd build

          cmake .. -DCMAKE_TOOLCHAIN_FILE=$NDK_PATH/build/cmake/android.toolchain.cmake \
            -DCMAKE_INSTALL_PREFIX=$POPPLER_PATH/install \
            -DFREETYPE_LIBRARY=/usr/lib/x86_64-linux-gnu/libfreetype.so \
            -DFREETYPE_INCLUDE_DIRS=/usr/include/freetype2 \
            -DANDROID_TOOLCHAIN=clang \
            -DCMAKE_BUILD_TYPE=Release \
            -DANDROID_PLATFORM=$ANDROID_VERSION \
            -DJPEG_LIBRARY=$LIB_JPEG_TURBO/install/liblibturbojpeg.a \
            -DJPEG_INCLUDE_DIR=$LIB_JPEG_TURBO/install/include/ \
            -D_FILE_OFFSET_BITS=64 \
            -DENABLE_BOOST=OFF \
            -DBUILD_GTK_TESTS=OFF \
            -DBUILD_QT5_TESTS=OFF \
            -DBUILD_QT6_TESTS=OFF \
            -DBUILD_CPP_TESTS=OFF \
            -DBUILD_MANUAL_TESTS=OFF \
            -DENABLE_UTILS=OFF \
            -DENABLE_GTK_DOC=OFF \
            -DENABLE_QT6=OFF \
            -DENABLE_QT5=ON \
            -DENABLE_LIBOPENJPEG=unmaintained \
            -DENABLE_CMS=none \
            -DENABLE_DCTDECODER=unmaintained \
            -DBUILD_SHARED_LIBS=OFF 


          sudo make install -j$(nproc --all)
          

      - name: Compile
        run: |
          qmake
          make -j$(nproc) apk
